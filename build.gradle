plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

base.archivesName = project.archives_base_name
version = "${project.mod_version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	maven {
		url "https://jitpack.io"
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	
	modImplementation libs.quilt.loader

	modImplementation libs.quilted.fabric.api

	modImplementation libs.lithium
}

processResources {
	inputs.property 'mod_version', mod_version
	inputs.property 'maven_group', maven_group
	inputs.property 'displayname', displayname
	inputs.property 'description', description

	filesMatching('quilt.mod.json') {
		expand "version": mod_version,
		 		"maven_group": maven_group,
				"displayname": displayname,
				"mod_description": mod_description
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}